<project name="hivelog-build" basedir="../../">
	<property environment="env"/>
	<!-- adiciona o ant-contrib, biblioteca que disponibiliza diversos comando adicionais ao ant -->
	<taskdef resource="net/sf/antcontrib/antlib.xml"
			 classpath="${user.home}/.m2/repository/ant-contrib/ant-contrib/1.0b3/ant-contrib-1.0b3.jar"/>

	<loadproperties srcFile="aws/staging/project.properties" />


	<!-- Propriedades do Build runtime-->
	<property name="build.projeto" value="${env.PROJETO}"/>
	<property name="build.acao" value="${env.ACAO}"/>
	<property name="build.pastacompilado" value="${env.PASTACOMPILADO}"/>
	<property name="build.id" value="${env.CODEBUILD_BUILD_ID}"/>
	<property name="build.tstamp" value="${env.CODEBUILD_START_TIME}"/>

	<propertycopy property="build.projectName" from="${build.projeto}.projectName" />
	<propertycopy property="build.environmentName" from="${build.projeto}.environmentName" />
	<propertycopy property="build.environmentCName" from="${build.projeto}.environmentCName" />
	<propertycopy property="build.templateName" from="${build.projeto}.templateName" />

	<exec executable="/bin/sh" outputproperty ="build.uuid">
		<arg value="-c" />
		<arg value="echo ${build.id} | cut -d: -f2" />
	</exec>

	<property name="deploy.folder" value="deployTemp"/>
	<property name="deploy.warpath" value="${deploy.folder}/${build.uuid}.war"/>
	<property name="deploy.s3name" value="${build.projectName}/${build.uuid}.war"/>

	<target name="implantar-app"
	description="A partir do nome do projeto, coloca o artefato compilado no elasticbeanstalk">


		<mkdir dir="${deploy.folder}" />
		<zip destfile="${deploy.warpath}" basedir="${build.pastacompilado}" />

		<property name="deploy.description" value="deploy automático para o staging"/>

		<create-application-version
				application.name="${build.projectName}"
				localPath="${deploy.warpath}"
				s3Name="${deploy.s3name}"
				description="${deploy.description}"
				versionLabel="${build.uuid}" />

	</target>

	<target name="ligar-desligar-servidor" description="Liga, atualiza ou desliga o servidor selecionado">

		<if>
			<equals arg1="${build.acao}" arg2="LIGAR" />
			<then>
				<antcall target="ligar-servidor"/>
			</then>
			<else>
				<antcall target="desligar-servidor"/>
			</else>
		</if>

	</target>

	<target name="ligar-servidor" description="Cria ou atualiza o servidor selecionado">

		<echo>Application Label ${build.uuid}</echo>
		<antcallback target="checar-servidor" return="server.color" />

		<if>
			<equals arg1="${server.color}" arg2="" />
			<then>
				<antcall target="criar-servidor"/>
			</then>
			<else>
				<if>
					<equals arg1="${server.color}" arg2="Terminated" />
					<then>
						<antcall target="criar-servidor"/>
					</then>
					<else>
						<antcall target="atualizar-servidor"/>
					</else>
				</if>
			</else>
		</if>

	</target>

	<target name="desligar-servidor" description="Desliga o servidor selecionado">

		<echo>Application Label ${build.uuid}</echo>
		<antcallback target="checar-servidor" return="server.color" />

		<if>
			<equals arg1="${server.color}" arg2="" />
			<then>
				<echo>Servidor já está morto, nada a fazer</echo>
			</then>
			<else>
				<if>
					<equals arg1="${server.color}" arg2="Terminated" />
					<then>
						<echo>Servidor já está morto, nada a fazer</echo>
					</then>
					<else>
						<antcall target="matar-servidor"/>
					</else>
				</if>
			</else>
		</if>

	</target>

	<!-- Retorna o nome do servidor, caso este esteja ativo -->
	<target name="checar-servidor"
			description="verifica qual o estado do ">

		<!-- exibe a consulta para referencias -->
		<echo>"aws elasticbeanstalk describe-environments --application-name='${build.projectName}' | grep ${build.environmentName}"</echo>

		<exec executable="/bin/sh" outputproperty="server.color"  failonerror="true">
			<arg value="-c" />
			<arg value="aws elasticbeanstalk describe-environments
			--application-name='${build.projectName}'
			--output text
			| grep ${build.environmentName}
			| head -n 1
			| cut -f 16" />
		</exec>

		<echo>"COLOR - ${server.color}"</echo>

	</target>

	<!-- Lança um servidor -->
	<target name="criar-servidor" >
		<exec executable="/bin/sh"  failonerror="true">
			<arg value="-c" />
			<arg value="aws elasticbeanstalk create-environment
			--application-name &quot;${build.projectName}&quot;
			--version-label &quot;${build.uuid}&quot;
			--environment-name &quot;${build.environmentName}&quot;
			--description &quot;${build.environmentName}&quot;
			--cname-prefix &quot;${build.environmentCName}&quot;
			--template-name &quot;${build.templateName}&quot;" />
		</exec>
	</target>

	<!-- atualiza um servidor -->
	<target name="atualizar-servidor" >
		<exec executable="/bin/sh"  failonerror="true">
			<arg value="-c" />
			<arg value="aws elasticbeanstalk update-environment
			--version-label &quot;${build.uuid}&quot;
			--environment-name &quot;${build.environmentName}&quot;" />
		</exec>
	</target>

	<target name="matar-servidor" >
		<exec executable="/bin/sh"  failonerror="true">
			<arg value="-c" />
			<arg value="aws elasticbeanstalk terminate-environment
			--environment-name &quot;${build.environmentName}&quot;" />
		</exec>
	</target>

	<macrodef name="create-application-version">
		<attribute name="application.name" />
		<attribute name="localPath" />
		<attribute name="s3Name" />
		<attribute name="description"/>
		<attribute name="versionLabel"/>
		<attribute name="s3.bucket" default="codebuild-app-deploy-hivecloud"/>
		<attribute name="s3Path" default = "s3://@{s3.bucket}/@{s3Name}"/>
		<attribute name="shorthand" default = "S3Bucket=@{s3.bucket},S3Key=@{s3Name}"/>
		<sequential>

			<echo>Upload para o S3</echo>

			<exec executable="/bin/sh" failonerror="true">
				<arg value="-c" />
				<arg value="aws s3 cp @{localPath} @{s3Path}" />
			</exec>

			<local name = "createApplication.command"/>

			<property name="createApplication.command" value="aws elasticbeanstalk
			create-application-version
			--application-name &quot;@{application.name}&quot;
			--description &quot;@{description}&quot;
			--version-label &quot;@{versionLabel}&quot;
			--source-bundle @{shorthand}"/>

			<echo>${createApplication.command}</echo>

			<exec executable="/bin/sh" failonerror="true">
				<arg value="-c" />
				<arg value="${createApplication.command}" />
			</exec>

		</sequential>
	</macrodef>


</project>



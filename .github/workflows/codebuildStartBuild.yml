name: Codebuild StartBuild

on:
  workflow_call:
    inputs:
      servidor:
        type: string
        required: false
      projeto:
        type: string
        required: true
      buildspec:
        type: string
        required: true
      nextVersion:
        type: string
        required: false
      thisVersion:
        type: string
        required: false
      versionLabel:
        type: string
        required: false
    secrets:
      secretKey:
        required: true
      accessKey:
        required: true
env:
  project-name: ${{ inputs.projeto }}
  buildspec-override: ${{ inputs.buildspec }}
  SERVER_TYPE: ${{ inputs.servidor }}
  NEXT_VERSION: ${{ inputs.nextVersion }}
  THIS_VERSION: ${{ inputs.thisVersion }}
  VERSION_LABEL: ${{ inputs.versionLabel }}

jobs:
  CodeBuild:
    runs-on: ubuntu-latest
    name: Job para iniciar um codebuild
    steps:
      - name: Configurando Credenciais AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.accessKey}}
          aws-secret-access-key: ${{ secrets.secretKey }}
          aws-region: us-east-1
      - name: Obtendo variáveis para Override
        id: override-variables
        run: |
          echo ::set-output name=override::$( node -e 'var options =[];
          if (process.env.SERVER_TYPE !== undefined){
          serverType = {};
          serverType.name = "SERVER_TYPE";
          serverType.value = process.env.SERVER_TYPE;
          serverType.type = "PLAINTEXT"
          options.push(serverType)}        
          if (process.env.VERSION_LABEL !== undefined){
          versionLabel = {};
          versionLabel.name = "VERSION_LABEL";
          versionLabel.value = process.env.VERSION_LABEL;
          versionLabel.type = "PLAINTEXT"}        
          if (process.env.THIS_VERSION !== undefined){
          thisVersion = {};
          thisVersion.name = "THIS_VERSION";
          thisVersion.value = process.env.THIS_VERSION;
          thisVersion.type = "PLAINTEXT"}        
          if (process.env.NEXT_VERSION !== undefined){
          nextVersion = {};
          nextVersion.name = "NEXT_VERSION";
          nextVersion.value = process.env.NEXT_VERSION;
          nextVersion.type = "PLAINTEXT"}
          console.log(JSON.stringify(options));' )
      - name: Iniciando o codebuild de fato
        id: start-build
        run: |
          aws codebuild start-build \
          --buildspec-override='${{env.buildspec-override}}' \
          --project-name=${{env.project-name}} \
          --source-version $GITHUB_SHA \
          --git-clone-depth-override=1 \
          --output=text \
          --environment-variables-override '${{ steps.override-variables.outputs.override }}' > output.txt
          cat output.txt
          echo ::set-output name=buildId::$( cat  output.txt | head -n 1 | cut -f 8 )
      - name: Link na saída
        run: |
          echo '[Link para o codebuild](https://console.aws.amazon.com/codesuite/codebuild/projects/${{env.project-name}}/build/${{ steps.start-build.outputs.buildId }})' >> $GITHUB_STEP_SUMMARY
          echo 'Variáveis passadas: ${{ steps.override-variables.outputs.override }}' >> $GITHUB_STEP_SUMMARY


